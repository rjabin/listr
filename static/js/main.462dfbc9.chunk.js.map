{"version":3,"sources":["shaders.ts","videochat.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["createShader","context","source","type","shader","Error","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createVbo","array","usage","vbo","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","AudioController","audioNode","analyser","gain","requestId","destination","this","createMediaStreamDestination","connect","clearColor","program","vertShader","fragShader","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","VERTEX_SHADER","FRAGMENT_SHADER","uniformLocations","names","Map","map","name","getUniformLocation","getUniformLocations","timeDomainArray","Float32Array","fftSize","freqArray","frequencyBinCount","timeDomainVbo","DYNAMIC_DRAW","freqVbo","requestAnimationFrame","render","clear","COLOR_BUFFER_BIT","getFloatTimeDomainData","bufferSubData","useProgram","uniform1f","get","length","uniform3f","enableVertexAttribArray","vertexAttribPointer","FLOAT","drawArrays","LINE_STRIP","getFloatFrequencyData","minDecibels","maxDecibels","startAudioStream","device","Promise","resolve","reject","navigator","mediaDevices","getUserMedia","audio","deviceId","then","stream","AudioContext","getAudioContext","createAnalyser","createMediaStreamSource","highPassFilter","initial","filter","createBiquadFilter","frequency","value","createHighPassFilter","lowPassFilter","createLowPassFilter","gainNode","createGain","VideoController","RecordDeck","mainStream","streams","recorder","timecodes","data","onData","MediaStream","MediaRecorder","audioBitsPerSecond","videoBitsPerSecond","ondataavailable","event","performance","now","id","state","Object","keys","forEach","getTracks","track","addTrack","start","pause","resume","stop","removeTrack","requestData","PeerCom","configuration","peer","onLocalDescription","iceServers","urls","RTCPeerConnection","onnegotiationneeded","console","log","oniceconnectionstatechange","iceConnectionState","onicegatheringstatechange","iceGatheringState","onicecandidate","e","onicecandidateerror","error","errorText","localDescription","createOffer","description","setLocalDescription","setRemoteDescription","createAnswer","close","App","useState","currentAudioDevice","setCurrentAudioDevice","currentVideoDevice","setCurrentVideoDevice","audioDevices","setAudioDevices","videoDevices","setVideoDevices","audioController","setAudioController","videoController","setVideoController","localRecorder","remoteRecorder","peerCom","localSdp","setLocalSdp","remoteSdp","setRemoteSdp","canvas","useRef","localVideo","remoteVideo","localPreview","remotePreview","selectAudioDevice","useCallback","label","controller","undefined","selectVideoDevice","video","startVideoStream","recordLocal","useEffect","duration","el","current","src","URL","createObjectURL","currentTime","setTimeout","enumerateDevices","devices","kind","srcObject","addStream","removeStream","startAnalysing","getContext","sdp","ontrack","ev","className","onChange","find","currentTarget","onClick","ref","width","height","style","background","autoPlay","muted","playsInline","controls","preload","readOnly","rows","cols","sendOffer","sendAnswer","receiveOffer","RTCSessionDescription","receiveAnswer","JSON","stringify","getCapabilities","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"uOAmCO,SAASA,EAAcC,EAAiCC,EAAgBC,GAC3E,IAAMC,EAASH,EAAQD,aAAaG,GACpC,IAAKC,EACD,MAAM,IAAIC,MAAM,qCAIpB,GAFAJ,EAAQK,aAAaF,EAAQF,GAC7BD,EAAQM,cAAcH,IACjBH,EAAQO,mBAAmBJ,EAAQH,EAAQQ,gBAC5C,MAAM,IAAIJ,MAAMJ,EAAQS,iBAAiBN,GAAUF,GAEvD,OAAOE,EAqBJ,SAASO,EAAWV,EAAiCW,EAAqBC,GAC7E,IAAMC,EAAMb,EAAQc,eAIpB,OAHAd,EAAQe,WAAWf,EAAQgB,aAAcH,GACzCb,EAAQiB,WAAWjB,EAAQgB,aAAcL,EAAOC,GAChDZ,EAAQe,WAAWf,EAAQgB,aAAc,MAClCH,EC7BJ,IAAMK,EAAb,WAQI,WAAalB,EAAuBmB,EAAsBC,EAAwBC,GAAiB,yBAPnGrB,aAOkG,OANlGmB,eAMkG,OALlGC,cAKkG,OAJlGC,UAIkG,OAHlGC,eAGkG,OAFlGC,iBAEkG,EAC9FC,KAAKxB,QAAUA,EACfwB,KAAKL,UAAYA,EACjBK,KAAKJ,SAAWA,EAChBI,KAAKH,KAAOA,EACZG,KAAKF,UAAY,KACjBE,KAAKD,YAAcC,KAAKxB,QAAQyB,+BAChCD,KAAKL,UAAUO,QAAQF,KAAKD,aAfpC,kDAkBI,SAAgBvB,GAAkC,IAAD,OAC7CA,EAAQ2B,WAAW,EAAK,EAAK,EAAK,GAClC,IAAMC,EDdP,SAAwB5B,EAAiC6B,EAAyBC,GACrF,IAAMF,EAAU5B,EAAQ+B,gBACxB,IAAKH,EACD,MAAM,IAAIxB,MAAM,sCAKpB,GAHAJ,EAAQgC,aAAaJ,EAASC,GAC9B7B,EAAQgC,aAAaJ,EAASE,GAC9B9B,EAAQiC,YAAYL,IACf5B,EAAQkC,oBAAoBN,EAAS5B,EAAQmC,aAC9C,MAAM,IAAI/B,MAAMJ,EAAQoC,kBAAkBR,GAAW,IAEzD,OAAOA,ECGaG,CACZ/B,EACAD,EAAaC,EDhEI,2bCgEuBA,EAAQqC,eAChDtC,EAAaC,ED3CM,qJC2CuBA,EAAQsC,kBAEhDC,EDLP,SAA6BvC,EAAiC4B,EAAuBY,GACxF,OAAO,IAAIC,IAAID,EAAME,KAAI,SAAAC,GAAI,MAAI,CAACA,EAAM3C,EAAQ4C,mBAAmBhB,EAASe,QCI/CE,CAAoB7C,EAAS4B,EAAS,CAAC,WAAY,aAAc,aAAc,YAClGkB,EAAkB,IAAIC,aAAavB,KAAKJ,SAAS4B,SACjDC,EAAY,IAAIF,aAAavB,KAAKJ,SAAS8B,mBAC3CC,EAAgBzC,EAAUV,EAAS8C,EAAiB9C,EAAQoD,cAC5DC,EAAU3C,EAAUV,EAASiD,EAAWjD,EAAQoD,cAgCtD5B,KAAKF,UAAYgC,uBA9BF,SAATC,IACFvD,EAAQwD,MAAMxD,EAAQyD,kBAEtB,EAAKrC,SAASsC,uBAAuBZ,GACrC9C,EAAQe,WAAWf,EAAQgB,aAAcmC,GACzCnD,EAAQ2D,cAAc3D,EAAQgB,aAAc,EAAG8B,GAC/C9C,EAAQ4D,WAAWhC,GACnB5B,EAAQ6D,UAAUtB,EAAiBuB,IAAI,YAAehB,EAAgBiB,QACtE/D,EAAQ6D,UAAUtB,EAAiBuB,IAAI,eAAkB,GACzD9D,EAAQ6D,UAAUtB,EAAiBuB,IAAI,cAAiB,GACxD9D,EAAQgE,UAAUzB,EAAiBuB,IAAI,WAAc,EAAK,EAAK,GAC/D9D,EAAQe,WAAWf,EAAQgB,aAAcmC,GACzCnD,EAAQiE,wBAAwB,GAChCjE,EAAQkE,oBAAoB,EAAG,EAAGlE,EAAQmE,OAAO,EAAO,EAAG,GAC3DnE,EAAQoE,WAAWpE,EAAQqE,WAAY,EAAGvB,EAAgBiB,QAE1D,EAAK3C,SAASkD,sBAAsBrB,GACpCjD,EAAQe,WAAWf,EAAQgB,aAAcqC,GACzCrD,EAAQ2D,cAAc3D,EAAQgB,aAAc,EAAGiC,GAC/CjD,EAAQ6D,UAAUtB,EAAiBuB,IAAI,YAAeb,EAAUc,QAChE/D,EAAQ6D,UAAUtB,EAAiBuB,IAAI,cAAiB,EAAK1C,SAASmD,aACtEvE,EAAQ6D,UAAUtB,EAAiBuB,IAAI,cAAiB,EAAK1C,SAASoD,aACtExE,EAAQgE,UAAUzB,EAAiBuB,IAAI,WAAc,EAAK,EAAK,GAC/D9D,EAAQe,WAAWf,EAAQgB,aAAcqC,GACzCrD,EAAQiE,wBAAwB,GAChCjE,EAAQkE,oBAAoB,EAAG,EAAGlE,EAAQmE,OAAO,EAAO,EAAG,GAC3DnE,EAAQoE,WAAWpE,EAAQqE,WAAY,EAAGpB,EAAUc,QAEpD,EAAKzC,UAAYgC,sBAAsBC,UA3DnD,KAiEO,SAASkB,EAAkBC,GAC9B,OAAO,IAAIC,SAAyB,SAACC,EAASC,GAC1CC,UAAUC,aAAaC,aAAa,CAAEC,MAAO,CAAEC,SAAUR,EAAOQ,YAAcC,MAAK,SAAAC,GAC/E,IAAMpF,EAhGX,WACH,GAA4B,oBAAjBqF,aACP,OAAO,IAAIA,aAEX,MAAM,IAAIjF,MAAM,mCA4FIkF,GACVlE,EAAWpB,EAAQuF,iBACnBtF,EAASD,EAAQwF,wBAAwBJ,GACzCK,EA3FX,SAA+BzF,EAAuB0F,GACzD,IAAMC,EAAS3F,EAAQ4F,qBAGvB,OAFAD,EAAOzF,KAAO,WACdyF,EAAOE,UAAUC,MAAQJ,EAClBC,EAuFwBI,CAAqB/F,EAAS,KAC/CgG,EArFX,SAA8BhG,EAAuB0F,GACxD,IAAMC,EAAS3F,EAAQ4F,qBAGvB,OAFAD,EAAOzF,KAAO,UACdyF,EAAOE,UAAUC,MAAQJ,EAClBC,EAiFuBM,CAAoBjG,EAAS,KAC7CqB,EA/EX,SAAqBrB,EAAuB0F,GAC/C,IAAMQ,EAAWlG,EAAQmG,aAEzB,OADAD,EAAS7E,KAAKyE,MAAQJ,EACfQ,EA4EcC,CAAWnG,EAAS,GACjCC,EAAOyB,QAAQN,GACfA,EAASM,QAAQ+D,GACjBA,EAAe/D,QAAQsE,GACvBA,EAActE,QAAQL,GAEtBuD,EAAQ,IAAI1D,EAAgBlB,EAASqB,EAAMD,EAAUC,UAK1D,IAAM+E,EAGT,WAAahB,GAAsB,yBAFnCA,YAEkC,EAC9B5D,KAAK4D,OAASA,GAUf,IAAMiB,EAAb,WAQI,aAAgB,IAAD,gCAPfC,gBAOe,OANfC,aAMe,OALfC,cAKe,OAJfC,eAIe,OAHfC,UAGe,OAFfC,YAEe,EACXnF,KAAK8E,WAAa,IAAIM,YACtBpF,KAAK+E,QAAU,GACf/E,KAAKgF,SAAW,IAAIK,cAAcrF,KAAK8E,WAAY,CAC3CQ,mBAAoB,MACpBC,mBAAoB,MAG5BvF,KAAKiF,UAAY,CAAC,EAAG,GACrBjF,KAAKmF,OAAS,aACdnF,KAAKgF,SAASQ,gBAAkB,SAAAC,GAC5B,EAAKR,UAAU,GAAKS,YAAYC,MAChC,EAAKT,KAAOO,EAAMP,KAClB,EAAKC,QAAQ,EAAKF,UAAU,GAAK,EAAKA,UAAU,IAAM,MArBlE,6CAyBI,SAAUrB,GACN5D,KAAK+E,QAAQnB,EAAOgC,IAAMhC,IA1BlC,0BA6BI,SAAaA,UACF5D,KAAK+E,QAAQnB,EAAOgC,MA9BnC,mBAiCI,WAAS,IAAD,OACwB,aAAxB5F,KAAKgF,SAASa,QACdC,OAAOC,KAAK/F,KAAK+E,SAASiB,SAAQ,SAAAJ,GAAO,IAAD,EACpC,YAAKb,QAAQa,UAAb,SAAkBK,YAAYD,SAAQ,SAAAE,GAAK,OAAI,EAAKpB,WAAWqB,SAASD,SAE5ElG,KAAKgF,SAASoB,QACdpG,KAAKiF,UAAU,GAAKS,YAAYC,SAvC5C,mBA2CI,WACgC,cAAxB3F,KAAKgF,SAASa,OACd7F,KAAKgF,SAASqB,UA7C1B,oBAiDI,WACgC,WAAxBrG,KAAKgF,SAASa,OACd7F,KAAKgF,SAASsB,WAnD1B,kBAuDI,WAAQ,IAAD,OACyB,cAAxBtG,KAAKgF,SAASa,OAAiD,WAAxB7F,KAAKgF,SAASa,QACrD7F,KAAKgF,SAASuB,OACdvG,KAAKgF,SAASpB,OAAOqC,YAAYD,SAAQ,SAAAE,GAAK,OAAI,EAAKpB,WAAW0B,YAAYN,SA1D1F,mBA8DI,WACgC,cAAxBlG,KAAKgF,SAASa,OAAiD,WAAxB7F,KAAKgF,SAASa,OACrD7F,KAAKgF,SAASyB,kBAhE1B,KAqEaC,EAAb,WAMI,aAAgB,yBALhBC,mBAKe,OAJf7B,gBAIe,OAHf8B,UAGe,OAFfC,wBAEe,EACX7G,KAAK2G,cAAgB,CAACG,WAAY,CAAC,CAACC,KAAM,CAAC,mCAC3C/G,KAAK8E,WAAa,IAAIM,YACtB,IAAMwB,EAAO,IAAII,kBAAkBhH,KAAK2G,eACxCC,EAAKK,oBAAsB,WACvBC,QAAQC,IAAI,wBAEhBP,EAAKQ,2BAA6B,WAC9BF,QAAQC,IAAI,+BAAiCP,EAAKS,qBAEtDT,EAAKU,0BAA4B,WAC7BJ,QAAQC,IAAI,8BAAgCP,EAAKW,oBAErDX,EAAKY,eAAiB,SAACC,GACnBP,QAAQC,IAAI,mBAEhBP,EAAKc,oBAAsB,SAAAD,GACvBP,QAAQS,MAAMF,EAAEG,YAEpB5H,KAAK4G,KAAOA,EACZ5G,KAAK6G,mBAAqB,aA1BlC,6CA6BI,SAAUjD,GAAsB,IAAD,OAC3BA,EAAOqC,YAAYD,SAAQ,SAAAE,GAAK,OAAI,EAAKpB,WAAWqB,SAASD,QA9BrE,0BAiCI,SAAatC,GAAsB,IAAD,OAC9BA,EAAOqC,YAAYD,SAAQ,SAAAE,GAAK,OAAI,EAAKpB,WAAW0B,YAAYN,QAlCxE,uBAqCI,WAAa,IAAD,OAOR,OANAlG,KAAK8E,WAAWmB,YAAYD,SAAQ,SAAAE,GAAK,OAAI,EAAKU,KAAKT,SAASD,EAAO,EAAKpB,eAC5E9E,KAAK4G,KAAKY,eAAiB,WACnB,EAAKZ,KAAKiB,kBACV,EAAKhB,mBAAmB,EAAKD,KAAKiB,mBAGnC7H,KAAK4G,KAAKkB,cAAcnE,MAAK,SAAAoE,GAChC,OAAO,EAAKnB,KAAKoB,oBAAoBD,GAAapE,MAAK,kBAAMoE,UA7CzE,0BAiDI,SAAaA,GACT,OAAO/H,KAAK4G,KAAKqB,qBAAqBF,GAAapE,MAAK,kBAAMoE,OAlDtE,wBAqDI,WAAc,IAAD,OAET,OADA/H,KAAK8E,WAAWmB,YAAYD,SAAQ,SAAAE,GAAK,OAAI,EAAKU,KAAKT,SAASD,EAAO,EAAKpB,eACrE9E,KAAK4G,KAAKsB,eAAevE,MAAK,SAAAoE,GACjC,OAAO,EAAKnB,KAAKoB,oBAAoBD,GAAapE,MAAK,kBAAM,EAAKkD,mBAAmB,EAAKD,KAAKiB,0BAxD3G,2BA4DI,SAAcE,GACV,OAAO/H,KAAK4G,KAAKqB,qBAAqBF,GAAapE,MAAK,kBAAMoE,OA7DtE,mBAgEI,WACI/H,KAAK8E,WAAa,IAAIM,YACtBpF,KAAK4G,KAAKuB,QACVnI,KAAK4G,KAAO,IAAII,kBAAkBhH,KAAK2G,mBAnE/C,K,OCpBeyB,MAzLf,WACI,MAAoDC,qBAApD,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAAoDF,qBAApD,mBAAOG,EAAP,KAA2BC,EAA3B,KACA,EAAwCJ,mBAA4B,IAApE,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwCN,mBAA4B,IAApE,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA8CR,qBAA9C,mBAAOS,EAAP,KAAwBC,EAAxB,KACA,EAA8CV,qBAA9C,mBAAOW,EAAP,KAAwBC,EAAxB,KACA,EAAwBZ,oBAAS,kBAAM,IAAIxD,KAApCqE,EAAP,oBACA,EAAyBb,oBAAS,kBAAM,IAAIxD,KAArCsE,EAAP,oBACA,EAAkBd,oBAAS,kBAAM,IAAI3B,KAA9B0C,EAAP,oBACA,EAAgCf,qBAAhC,mBAAOgB,EAAP,KAAiBC,EAAjB,KACA,EAAkCjB,qBAAlC,mBAAOkB,EAAP,KAAkBC,EAAlB,KACMC,EAASC,iBAA0B,MACnCC,EAAaD,iBAAyB,MACtCE,EAAcF,iBAAyB,MACvCG,EAAeH,iBAAyB,MACxCI,EAAgBJ,iBAAyB,MACzCK,EAAoBC,uBAAY,SAAC9G,GAEnC,OADe,OAAf4F,QAAe,IAAfA,KAAiBtK,QAAQ2J,QACpBjF,GAKLgE,QAAQC,IAAI,sBAAwBjE,EAAO+G,OAC3C1B,EAAsBrF,GACfD,EAAiBC,GAAQS,MAAK,SAAAuG,GACjChD,QAAQC,IAAI,uBAAyB+C,GACrCnB,EAAmBmB,QARnBnB,OAAmBoB,GACnB5B,OAAsB4B,GACfhH,QAAQC,aAQpB,CAAC0F,IACEsB,EAAoBJ,uBAAY,SAAC9G,GACnC,OAAKA,GAKLgE,QAAQC,IAAI,sBAAwBjE,EAAO+G,OAC3CxB,EAAsBvF,GD4FvB,SAA2BA,GAC9B,OAAOI,UAAUC,aAAaC,aAAa,CAAE6G,MAAO,CAAE3G,SAAUR,EAAOQ,YAAcC,MAAK,SAAAC,GACtF,OAAO,IAAIgB,EAAgBhB,MC7FpB0G,CAAiBpH,GAAQS,MAAK,SAAAuG,GACjChD,QAAQC,IAAI,uBAAyB+C,GACrCjB,EAAmBiB,QARnBjB,OAAmBkB,GACnB1B,OAAsB0B,GACfhH,QAAQC,aAQpB,IACGmH,EAAcP,uBAAY,WACS,aAAjCd,EAAclE,SAASa,MACvBqD,EAAc9C,QAEd8C,EAAc3C,OAEoB,aAAlC4C,EAAenE,SAASa,MACxBsD,EAAe/C,QAEf+C,EAAe5C,SAEpB,CAAC2C,EAAeC,IAoFnB,OAnFAqB,qBAAU,WACNtB,EAAc/D,OAAS,SAACsF,GACpB,IAAMC,EAAKb,EAAac,QACpBD,IACAA,EAAGE,IAAMC,IAAIC,gBAAgB5B,EAAchE,MAC3CwF,EAAGK,YAAcN,EACjBO,YAAW,kBAAMN,EAAGK,YAAc,IAAG,OAG7C5B,EAAehE,OAAS,SAACsF,GACrB,IAAMC,EAAKZ,EAAca,QACrBD,IACAA,EAAGE,IAAMC,IAAIC,gBAAgB3B,EAAejE,MAC5CwF,EAAGK,YAAcN,EACjBO,YAAW,kBAAMN,EAAGK,YAAc,IAAG,OAG7CzH,UAAUC,aAAaC,aAAa,CAChCC,OAAO,EAAM4G,OAAO,IACrB1G,MAAK,kBD5ELL,UAAUC,aAAa0H,mBAAmBtH,MAAK,SAAAuH,GAAO,OAAIA,EAAQ/G,QAAO,SAAAjB,GAAM,MAAoB,eAAhBA,EAAOiI,WC4ErDxH,MAAK,SAAAuH,GAGzC,OAFAhE,QAAQC,IAAI,qBACZwB,EAAgBuC,GACZA,EAAQ3I,OAAS,IAAM+F,EAChByB,EAAkBmB,EAAQ,IAE1B/H,QAAQC,gBAEnBO,MAAK,kBDhFNL,UAAUC,aAAa0H,mBAAmBtH,MAAK,SAAAuH,GAAO,OAAIA,EAAQ/G,QAAO,SAAAjB,GAAM,MAAoB,eAAhBA,EAAOiI,WCgFpDxH,MAAK,SAAAuH,GAG1C,OAFAhE,QAAQC,IAAI,qBACZ0B,EAAgBqC,GACZA,EAAQ3I,OAAS,IAAMiG,EAChB4B,EAAkBc,EAAQ,IAE1B/H,QAAQC,kBAIxB,IACHoH,qBAAU,WAkBN,OAjBAtD,QAAQC,IAAI,QACRwC,EAAWgB,UAEPhB,EAAWgB,QAAQS,UADnBpC,EAC+BA,EAAgBpF,OAEhB,MAGnCkF,IACAM,EAAQiC,UAAUvC,EAAgB/I,YAAY6D,QAC9CsF,EAAcmC,UAAUvC,EAAgB/I,YAAY6D,SAEpDoF,IACAI,EAAQiC,UAAUrC,EAAgBpF,QAClCsF,EAAcmC,UAAUrC,EAAgBpF,SAGrC,WACCkF,IACAM,EAAQkC,aAAaxC,EAAgB/I,YAAY6D,QACjDsF,EAAcoC,aAAaxC,EAAgB/I,YAAY6D,SAEvDoF,IACAI,EAAQkC,aAAatC,EAAgBpF,QACrCsF,EAAcoC,aAAatC,EAAgBpF,YAGpD,CAACkF,EAAiBM,EAASF,EAAeF,IAC7CwB,qBAAU,WAAO,IAAD,EACG,OAAf1B,QAAe,IAAfA,KAAiByC,eAAjB,UAAgC9B,EAAOkB,eAAvC,aAAgC,EAAgBa,WAAW,aAC5D,CAAC1C,IACJ0B,qBAAU,WACNpB,EAAQvC,mBAAqB,SAAAkB,GACzBuB,EAAW,OAACvB,QAAD,IAACA,OAAD,EAACA,EAAa0D,MAE7BrC,EAAQxC,KAAK8E,QAAU,SAAAC,GACnBzE,QAAQC,IAAI,WACZD,QAAQC,IAAIwE,GACZxC,EAAekC,UAAUM,EAAG5G,QAAQ,IAChC6E,EAAYe,UACZf,EAAYe,QAAQS,UAAYO,EAAG5G,QAAQ,OAGpD,CAACqE,EAASD,IAET,sBAAKyC,UAAU,MAAf,UACI,uBACA,yBAAQC,SAAW,SAAApG,GAAK,OAAIsE,EAAkBrB,EAAaoD,MAAK,SAAA5I,GAAM,OAAIA,EAAOQ,WAAa+B,EAAMsG,cAAczH,WAAUA,MAAK,OAAGgE,QAAH,IAAGA,OAAH,EAAGA,EAAoB5E,SAAxJ,UACI,2BAEIgF,EAAaxH,KAAI,SAAAgC,GAAM,OACnB,wBAAgCoB,MAAQpB,EAAOQ,SAA/C,SAA4DR,EAAO+G,OAArD/G,EAAOQ,gBAGjC,yBAAQmI,SAAW,SAAApG,GAAK,OAAI2E,EAAkBxB,EAAakD,MAAK,SAAA5I,GAAM,OAAIA,EAAOQ,WAAa+B,EAAMsG,cAAczH,WAAUA,MAAK,OAAGkE,QAAH,IAAGA,OAAH,EAAGA,EAAoB9E,SAAxJ,UACI,2BAEIkF,EAAa1H,KAAI,SAAAgC,GAAM,OACnB,wBAAgCoB,MAAQpB,EAAOQ,SAA/C,SAA4DR,EAAO+G,OAArD/G,EAAOQ,gBAGjC,wBAAQsI,QAAUzB,EAAlB,SAAkE,aAAjCrB,EAAclE,SAASa,MAAuB,MAAQ,SACvF,uBACA,uBACA,wBAAQoG,IAAMxC,EAASyC,MAAQ,IAAMC,OAAS,MAC9C,uBACA,uBAAOF,IAAMtC,EAAauC,MAAQ,IAAMC,OAAS,IAAMC,MAAQ,CAAEC,WAAY,SAAYC,UAAW,EAAOC,OAAQ,EAAOC,aAAc,IACxI,uBAAOP,IAAMrC,EAAcsC,MAAQ,IAAMC,OAAS,IAAMC,MAAQ,CAAEC,WAAY,SAAYC,UAAW,EAAOC,OAAQ,EAAOC,aAAc,IACzI,uBAAOP,IAAMpC,EAAeqC,MAAQ,IAAMC,OAAS,IAAMC,MAAQ,CAAEC,WAAY,SAAYI,UAAW,EAAOC,QAAU,SACvH,uBAAOT,IAAMnC,EAAgBoC,MAAQ,IAAMC,OAAS,IAAMC,MAAQ,CAAEC,WAAY,SAAYI,UAAW,EAAOC,QAAU,SACxH,gCACI,0BAAUpI,MAAO+E,EAAUsD,UAAU,EAAMC,KAAM,GAAIC,KAAM,KAC3D,wBAAQb,QAAS,kBAAM5C,EAAQ0D,aAA/B,kDACA,wBAAQd,QAAS,kBAAM5C,EAAQ2D,cAA/B,yCAEJ,gCACI,0BAAUlB,SAAU,SAAApG,GAAK,OAAI+D,EAAa/D,EAAMsG,cAAczH,QAASsI,KAAM,GAAIC,KAAM,KACvF,wBAAQb,QAAS,kBAAM5C,EAAQ4D,aAAa,IAAIC,sBAAsB,CAACvO,KAAM,QAAS+M,IAAKlC,MAA3F,kDACA,wBAAQyC,QAAS,kBAAM5C,EAAQ8D,cAAc,IAAID,sBAAsB,CAACvO,KAAM,SAAU+M,IAAKlC,MAA7F,yCAEJ,8BACI,wBAAQyC,QAAS,kBAAM5C,EAAQjB,SAA/B,4BAEJ,8BACI,0BAAU7D,MAAO6I,KAAKC,UAAL,OAAepE,QAAf,IAAeA,OAAf,EAAeA,EAAiBpF,OAAOqC,YAAY,GAAGoH,mBAAoBT,KAAM,GAAIC,KAAM,WCzK5GS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB7J,MAAK,YAAkD,IAA/C8J,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAAS/L,OACP,cAAC,IAAMgM,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.462dfbc9.chunk.js","sourcesContent":["export const RenderLineVertex = `#version 300 es\n\nprecision highp float;\n\nlayout (location = 0) in float i_value;\n\nuniform float u_length;\nuniform float u_minValue;\nuniform float u_maxValue;\n\n#define linearstep(edge0, edge1, x) max(min((x - edge0) / (edge1 - edge0), 1.0), 0.0)\n\nvoid main(void) {\n  gl_Position = vec4(\n    (float(gl_VertexID) / u_length) * 2.0 - 1.0,\n    linearstep(u_minValue, u_maxValue, i_value) * 2.0 - 1.0,\n    0.0,\n    1.0\n  );\n}\n`;\n\nexport const RenderLineFragment = `#version 300 es\n\nprecision highp float;\n\nout vec4 o_color;\n\nuniform vec3 u_color;\n\nvoid main(void) {\n  o_color = vec4(u_color, 1.0);\n}\n`;\n\nexport function createShader (context: WebGL2RenderingContext, source: string, type: GLenum) {\n    const shader = context.createShader(type);\n    if (!shader) {\n        throw new Error('Sorry! shader does not supported.');\n    }\n    context.shaderSource(shader, source);\n    context.compileShader(shader);\n    if (!context.getShaderParameter(shader, context.COMPILE_STATUS)) {\n        throw new Error(context.getShaderInfoLog(shader) + source);\n    }\n    return shader;\n}\n\nexport function createProgram (context: WebGL2RenderingContext, vertShader: WebGLShader, fragShader: WebGLShader) {\n    const program = context.createProgram();\n    if (!program) {\n        throw new Error('Sorry! program does not supported.');\n    }\n    context.attachShader(program, vertShader);\n    context.attachShader(program, fragShader);\n    context.linkProgram(program);\n    if (!context.getProgramParameter(program, context.LINK_STATUS)) {\n        throw new Error(context.getProgramInfoLog(program) + '');\n    }\n    return program;\n}\n\nexport function getUniformLocations(context: WebGL2RenderingContext, program: WebGLProgram, names: string[]) {\n    return new Map(names.map(name => [name, context.getUniformLocation(program, name)]));\n}\n\nexport function createVbo (context: WebGL2RenderingContext, array: BufferSource, usage: GLenum) {\n    const vbo = context.createBuffer();\n    context.bindBuffer(context.ARRAY_BUFFER, vbo);\n    context.bufferData(context.ARRAY_BUFFER, array, usage);\n    context.bindBuffer(context.ARRAY_BUFFER, null);\n    return vbo;\n}\n","import { createProgram, createShader, createVbo, getUniformLocations, RenderLineFragment, RenderLineVertex } from './shaders';\n\nexport function getAudioInputDeviceList () {\n    return navigator.mediaDevices.enumerateDevices().then(devices => devices.filter(device => device.kind === 'audioinput'));\n}\n\nexport function getVideoInputDeviceList () {\n    return navigator.mediaDevices.enumerateDevices().then(devices => devices.filter(device => device.kind === 'videoinput'));\n}\n\nexport function getAudioOutputDeviceList () {\n    return navigator.mediaDevices.enumerateDevices().then(devices => devices.filter(device => device.kind === 'audiooutput'));\n}\n\nexport function getAudioContext () {\n    if (typeof AudioContext === 'function') {\n        return new AudioContext();\n    } else {\n        throw new Error('Sorry! Web Audio not supported.');\n    }\n}\n\nexport function createHighPassFilter (context: AudioContext, initial: number) {\n    const filter = context.createBiquadFilter();\n    filter.type = 'highpass';\n    filter.frequency.value = initial;\n    return filter;\n}\n\nexport function createLowPassFilter (context: AudioContext, initial: number) {\n    const filter = context.createBiquadFilter();\n    filter.type = 'lowpass';\n    filter.frequency.value = initial;\n    return filter;\n}\n\nexport function createGain (context: AudioContext, initial: number) {\n    const gainNode = context.createGain();\n    gainNode.gain.value = initial;\n    return gainNode;\n}\n\nexport class AudioController {\n    context: AudioContext\n    audioNode: AudioNode\n    analyser: AnalyserNode\n    gain: GainNode\n    requestId: number | null;\n    destination: MediaStreamAudioDestinationNode;\n\n    constructor (context: AudioContext, audioNode: AudioNode, analyser: AnalyserNode, gain: GainNode) {\n        this.context = context;\n        this.audioNode = audioNode\n        this.analyser = analyser;\n        this.gain = gain;\n        this.requestId = null;\n        this.destination = this.context.createMediaStreamDestination();\n        this.audioNode.connect(this.destination);\n    }\n\n    startAnalysing (context: WebGL2RenderingContext) {\n        context.clearColor(0.0, 0.0, 0.0, 1.0);\n        const program = createProgram(\n            context,\n            createShader(context, RenderLineVertex, context.VERTEX_SHADER),\n            createShader(context, RenderLineFragment, context.FRAGMENT_SHADER),\n        );\n        const uniformLocations = getUniformLocations(context, program, ['u_length', 'u_minValue', 'u_maxValue', 'u_color']);\n        const timeDomainArray = new Float32Array(this.analyser.fftSize);\n        const freqArray = new Float32Array(this.analyser.frequencyBinCount);\n        const timeDomainVbo = createVbo(context, timeDomainArray, context.DYNAMIC_DRAW);\n        const freqVbo = createVbo(context, freqArray, context.DYNAMIC_DRAW);\n\n        const render = () => {\n            context.clear(context.COLOR_BUFFER_BIT);\n\n            this.analyser.getFloatTimeDomainData(timeDomainArray);\n            context.bindBuffer(context.ARRAY_BUFFER, timeDomainVbo);\n            context.bufferSubData(context.ARRAY_BUFFER, 0, timeDomainArray);\n            context.useProgram(program);\n            context.uniform1f(uniformLocations.get('u_length')!!, timeDomainArray.length);\n            context.uniform1f(uniformLocations.get('u_minValue')!!, -1.0);\n            context.uniform1f(uniformLocations.get('u_maxValue')!!, 1.0);\n            context.uniform3f(uniformLocations.get('u_color')!!, 1.0, 0.0, 0.0);\n            context.bindBuffer(context.ARRAY_BUFFER, timeDomainVbo);\n            context.enableVertexAttribArray(0);\n            context.vertexAttribPointer(0, 1, context.FLOAT, false, 0, 0);\n            context.drawArrays(context.LINE_STRIP, 0, timeDomainArray.length);\n\n            this.analyser.getFloatFrequencyData(freqArray);\n            context.bindBuffer(context.ARRAY_BUFFER, freqVbo);\n            context.bufferSubData(context.ARRAY_BUFFER, 0, freqArray);\n            context.uniform1f(uniformLocations.get('u_length')!!, freqArray.length);\n            context.uniform1f(uniformLocations.get('u_minValue')!!, this.analyser.minDecibels);\n            context.uniform1f(uniformLocations.get('u_maxValue')!!, this.analyser.maxDecibels);\n            context.uniform3f(uniformLocations.get('u_color')!!, 0.0, 0.0, 1.0);\n            context.bindBuffer(context.ARRAY_BUFFER, freqVbo);\n            context.enableVertexAttribArray(0);\n            context.vertexAttribPointer(0, 1, context.FLOAT, false, 0, 0);\n            context.drawArrays(context.LINE_STRIP, 0, freqArray.length);\n\n            this.requestId = requestAnimationFrame(render);\n        };\n        this.requestId = requestAnimationFrame(render);\n    }\n}\n\nexport function startAudioStream (device: MediaDeviceInfo) {\n    return new Promise<AudioController>((resolve, reject) => {\n        navigator.mediaDevices.getUserMedia({ audio: { deviceId: device.deviceId } }).then(stream => {\n            const context = getAudioContext()\n            const analyser = context.createAnalyser();\n            const source = context.createMediaStreamSource(stream);\n            const highPassFilter = createHighPassFilter(context, 700);\n            const lowPassFilter = createLowPassFilter(context, 2000);\n            const gain = createGain(context, 1.0);\n            source.connect(analyser);\n            analyser.connect(highPassFilter);\n            highPassFilter.connect(lowPassFilter);\n            lowPassFilter.connect(gain);\n            // gain.connect(context.destination);\n            resolve(new AudioController(context, gain, analyser, gain));\n        });\n    });\n}\n\nexport class VideoController {\n    stream: MediaStream\n\n    constructor (stream: MediaStream) {\n        this.stream = stream;\n    }\n}\n\nexport function startVideoStream (device: MediaDeviceInfo) {\n    return navigator.mediaDevices.getUserMedia({ video: { deviceId: device.deviceId } }).then(stream => {\n        return new VideoController(stream);\n    })\n}\n\nexport class RecordDeck {\n    mainStream: MediaStream\n    streams: { [key: string]: MediaStream }\n    recorder: MediaRecorder\n    timecodes: [number, number]\n    data: Blob | undefined\n    onData: (duration: number) => void\n\n    constructor () {\n        this.mainStream = new MediaStream();\n        this.streams = {};\n        this.recorder = new MediaRecorder(this.mainStream, {\n                audioBitsPerSecond: 128000,\n                videoBitsPerSecond: 5000000,\n                // mimeType          : 'video/webm',\n            });\n        this.timecodes = [0, 0];\n        this.onData = () => {};\n        this.recorder.ondataavailable = event => {\n            this.timecodes[1] = performance.now();\n            this.data = event.data;\n            this.onData((this.timecodes[1] - this.timecodes[0]) / 1000);\n        }\n    }\n\n    addStream(stream: MediaStream) {\n        this.streams[stream.id] = stream;\n    }\n\n    removeStream(stream: MediaStream) {\n        delete this.streams[stream.id];\n    }\n\n    start() {\n        if (this.recorder.state === 'inactive') {\n            Object.keys(this.streams).forEach(id => {\n                this.streams[id]?.getTracks().forEach(track => this.mainStream.addTrack(track));\n            });\n            this.recorder.start();\n            this.timecodes[0] = performance.now();\n        }\n    }\n\n    pause() {\n        if (this.recorder.state === 'recording') {\n            this.recorder.pause();\n        }\n    }\n\n    resume() {\n        if (this.recorder.state === 'paused') {\n            this.recorder.resume();\n        }\n    }\n\n    stop() {\n        if (this.recorder.state === 'recording' || this.recorder.state === 'paused') {\n            this.recorder.stop();\n            this.recorder.stream.getTracks().forEach(track => this.mainStream.removeTrack(track));\n        }\n    }\n\n    split() {\n        if (this.recorder.state === 'recording' || this.recorder.state === 'paused') {\n            this.recorder.requestData();\n        }\n    }\n}\n\nexport class PeerCom {\n    configuration: RTCConfiguration\n    mainStream: MediaStream\n    peer: RTCPeerConnection\n    onLocalDescription: (desc: RTCSessionDescription | null) => void\n\n    constructor () {\n        this.configuration = {iceServers: [{urls: ['stun:stun.l.google.com:19302']}]};\n        this.mainStream = new MediaStream();\n        const peer = new RTCPeerConnection(this.configuration);\n        peer.onnegotiationneeded = () => {\n            console.log('onnegotiationneeded');\n        };\n        peer.oniceconnectionstatechange = () => {\n            console.log('oniceconnectionstatechange: ' + peer.iceConnectionState);\n        }\n        peer.onicegatheringstatechange = () => {\n            console.log('onicegatheringstatechange: ' + peer.iceGatheringState);\n        }\n        peer.onicecandidate = (e) => {\n            console.log('onicecandidate');\n        }\n        peer.onicecandidateerror = e => {\n            console.error(e.errorText);\n        }\n        this.peer = peer;\n        this.onLocalDescription = () => {};\n    }\n\n    addStream(stream: MediaStream) {\n        stream.getTracks().forEach(track => this.mainStream.addTrack(track));\n    }\n\n    removeStream(stream: MediaStream) {\n        stream.getTracks().forEach(track => this.mainStream.removeTrack(track));\n    }\n\n    sendOffer() {\n        this.mainStream.getTracks().forEach(track => this.peer.addTrack(track, this.mainStream));\n        this.peer.onicecandidate = () => {\n            if (this.peer.localDescription) {\n                this.onLocalDescription(this.peer.localDescription);\n            }\n        }\n        return this.peer.createOffer().then(description => {\n            return this.peer.setLocalDescription(description).then(() => description);\n        });\n    }\n\n    receiveOffer(description: RTCSessionDescription) {\n        return this.peer.setRemoteDescription(description).then(() => description);\n    }\n\n    sendAnswer() {\n        this.mainStream.getTracks().forEach(track => this.peer.addTrack(track, this.mainStream));\n        return this.peer.createAnswer().then(description => {\n            return this.peer.setLocalDescription(description).then(() => this.onLocalDescription(this.peer.localDescription));\n        });\n    }\n\n    receiveAnswer(description: RTCSessionDescription) {\n        return this.peer.setRemoteDescription(description).then(() => description);\n    }\n\n    close() {\n        this.mainStream = new MediaStream();\n        this.peer.close();\n        this.peer = new RTCPeerConnection(this.configuration);\n    }\n}\n","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { AudioController, getAudioInputDeviceList, getVideoInputDeviceList, PeerCom, RecordDeck, startAudioStream, startVideoStream, VideoController } from './videochat';\n\nfunction App () {\n    const [currentAudioDevice, setCurrentAudioDevice] = useState<MediaDeviceInfo | undefined>();\n    const [currentVideoDevice, setCurrentVideoDevice] = useState<MediaDeviceInfo | undefined>();\n    const [audioDevices, setAudioDevices] = useState<MediaDeviceInfo[]>([]);\n    const [videoDevices, setVideoDevices] = useState<MediaDeviceInfo[]>([]);\n    const [audioController, setAudioController] = useState<AudioController | undefined>();\n    const [videoController, setVideoController] = useState<VideoController | undefined>();\n    const [localRecorder] = useState(() => new RecordDeck());\n    const [remoteRecorder] = useState(() => new RecordDeck());\n    const [peerCom] = useState(() => new PeerCom());\n    const [localSdp, setLocalSdp] = useState<string | undefined>();\n    const [remoteSdp, setRemoteSdp] = useState<string | undefined>();\n    const canvas = useRef<HTMLCanvasElement>(null);\n    const localVideo = useRef<HTMLVideoElement>(null);\n    const remoteVideo = useRef<HTMLVideoElement>(null);\n    const localPreview = useRef<HTMLVideoElement>(null);\n    const remotePreview = useRef<HTMLVideoElement>(null);\n    const selectAudioDevice = useCallback((device: MediaDeviceInfo | undefined) => {\n        audioController?.context.close();\n        if (!device) {\n            setAudioController(undefined);\n            setCurrentAudioDevice(undefined);\n            return Promise.resolve();\n        }\n        console.log('selectAudioDevice: ' + device.label);\n        setCurrentAudioDevice(device);\n        return startAudioStream(device).then(controller => {\n            console.log('audio stream caught ' + controller);\n            setAudioController(controller);\n        });\n    }, [audioController]);\n    const selectVideoDevice = useCallback((device: MediaDeviceInfo | undefined) => {\n        if (!device) {\n            setVideoController(undefined);\n            setCurrentVideoDevice(undefined);\n            return Promise.resolve();\n        }\n        console.log('selectVideoDevice: ' + device.label);\n        setCurrentVideoDevice(device);\n        return startVideoStream(device).then(controller => {\n            console.log('video stream caught ' + controller);\n            setVideoController(controller);\n        });\n    }, []);\n    const recordLocal = useCallback(() => {\n        if (localRecorder.recorder.state === 'inactive') {\n            localRecorder.start();\n        } else {\n            localRecorder.stop();\n        }\n        if (remoteRecorder.recorder.state === 'inactive') {\n            remoteRecorder.start();\n        } else {\n            remoteRecorder.stop();\n        }\n    }, [localRecorder, remoteRecorder]);\n    useEffect(() => {\n        localRecorder.onData = (duration) => {\n            const el = localPreview.current;\n            if (el) {\n                el.src = URL.createObjectURL(localRecorder.data);\n                el.currentTime = duration;\n                setTimeout(() => el.currentTime = 0, 100);\n            }\n        };\n        remoteRecorder.onData = (duration) => {\n            const el = remotePreview.current;\n            if (el) {\n                el.src = URL.createObjectURL(remoteRecorder.data);\n                el.currentTime = duration;\n                setTimeout(() => el.currentTime = 0, 100);\n            }\n        };\n        navigator.mediaDevices.getUserMedia({\n            audio: true, video: true\n        }).then(() => getAudioInputDeviceList().then(devices => {\n            console.log('got audio devices');\n            setAudioDevices(devices);\n            if (devices.length > 0 && !currentAudioDevice) {\n                return selectAudioDevice(devices[0]);\n            } else {\n                return Promise.resolve();\n            }\n        })).then(() => getVideoInputDeviceList().then(devices => {\n            console.log('got video devices');\n            setVideoDevices(devices);\n            if (devices.length > 0 && !currentVideoDevice) {\n                return selectVideoDevice(devices[0]);\n            } else {\n                return Promise.resolve();\n            }\n        }));\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    useEffect(() => {\n        console.log('play');\n        if (localVideo.current) {\n            if (videoController) {\n                localVideo.current.srcObject = videoController.stream;\n            } else {\n                localVideo.current.srcObject = null;\n            }\n        }\n        if (audioController) {\n            peerCom.addStream(audioController.destination.stream);\n            localRecorder.addStream(audioController.destination.stream);\n        }\n        if (videoController) {\n            peerCom.addStream(videoController.stream);\n            localRecorder.addStream(videoController.stream);\n        }\n\n        return () => {\n            if (audioController) {\n                peerCom.removeStream(audioController.destination.stream);\n                localRecorder.removeStream(audioController.destination.stream);\n            }\n            if (videoController) {\n                peerCom.removeStream(videoController.stream);\n                localRecorder.removeStream(videoController.stream);\n            }\n        };\n    }, [audioController, peerCom, localRecorder, videoController]);\n    useEffect(() => {\n        audioController?.startAnalysing(canvas.current?.getContext('webgl2')!!);\n    }, [audioController]);\n    useEffect(() => {\n        peerCom.onLocalDescription = description => {\n            setLocalSdp(description?.sdp);\n        }\n        peerCom.peer.ontrack = ev => {\n            console.log('ontrack');\n            console.log(ev);\n            remoteRecorder.addStream(ev.streams[0]);\n            if (remoteVideo.current) {\n                remoteVideo.current.srcObject = ev.streams[0];\n            }\n        };\n    }, [peerCom, remoteRecorder]);\n    return (\n        <div className=\"App\">\n            <br />\n            <select onChange={ event => selectAudioDevice(audioDevices.find(device => device.deviceId === event.currentTarget.value)) } value={ currentAudioDevice?.deviceId }>\n                <option />\n                {\n                    audioDevices.map(device =>\n                        <option key={ device.deviceId } value={ device.deviceId }>{ device.label }</option>\n                    )\n                }</select>\n            <select onChange={ event => selectVideoDevice(videoDevices.find(device => device.deviceId === event.currentTarget.value)) } value={ currentVideoDevice?.deviceId }>\n                <option />\n                {\n                    videoDevices.map(device =>\n                        <option key={ device.deviceId } value={ device.deviceId }>{ device.label }</option>\n                    )\n                }</select>\n            <button onClick={ recordLocal }>{localRecorder.recorder.state === 'inactive' ? 'Rec' : 'Stop'}</button>\n            <br />\n            <br />\n            <canvas ref={ canvas } width={ 800 } height={ 100 } />\n            <br />\n            <video ref={ localVideo } width={ 400 } height={ 300 } style={ { background: 'black' } } autoPlay={ true } muted={ true } playsInline={ true } />\n            <video ref={ remoteVideo } width={ 400 } height={ 300 } style={ { background: 'black' } } autoPlay={ true } muted={ true } playsInline={ true } />\n            <video ref={ localPreview } width={ 400 } height={ 300 } style={ { background: 'black' } } controls={ true } preload={ \"auto\" } />\n            <video ref={ remotePreview } width={ 400 } height={ 300 } style={ { background: 'black' } } controls={ true } preload={ \"auto\" } />\n            <div>\n                <textarea value={localSdp} readOnly={true} rows={10} cols={50} />\n                <button onClick={() => peerCom.sendOffer()}>オファー送信</button>\n                <button onClick={() => peerCom.sendAnswer()}>回答送信</button>\n            </div>\n            <div>\n                <textarea onChange={event => setRemoteSdp(event.currentTarget.value) } rows={10} cols={50} />\n                <button onClick={() => peerCom.receiveOffer(new RTCSessionDescription({type: 'offer', sdp: remoteSdp}))}>オファー受信</button>\n                <button onClick={() => peerCom.receiveAnswer(new RTCSessionDescription({type: 'answer', sdp: remoteSdp}))}>回答受信</button>\n            </div>\n            <div>\n                <button onClick={() => peerCom.close()}>切断</button>\n            </div>\n            <div>\n                <textarea value={JSON.stringify(videoController?.stream.getTracks()[0].getCapabilities())} rows={10} cols={50} />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}